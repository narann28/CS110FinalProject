<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{title}}</title>
    <link rel="stylesheet" href="/css/room-style.css">
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #ADD8E6;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
        }

        .container {
            max-width: 600px;
            padding: 20px;
            background-color: #87CEEB;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        h1 {
            text-align: center;
            margin-bottom: 20px;
            color: #ffffff;
        }

        #messages {
            border: 1px solid #ccc;
            padding: 10px;
            margin-bottom: 20px;
            max-height: 300px;
            overflow-y: auto;
            background-color: #d3d4d5;
            display: flex;
            flex-direction: column;
        }

        .message {
            position: relative;
            width: fit-content;
            max-width: 80%;
            padding: 10px;
            margin: 5px;
            border-radius: 12px;
            line-height: 1.4;
            font-size: 16px;
            color: black;
        }

        .my-message {
            background-color: #ADD8E6;
            align-self: flex-end;
            border-bottom-right-radius: 0;
        }

        .other-message {
            background-color: #FFFFFF;
            align-self: flex-start;
            border-bottom-left-radius: 0;
        }

        .message-menu {
            display: none;
            position: absolute;
            top: 0;
            right: 0;
            background-color: white;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
            z-index: 10;
        }

        .message-menu button {
            display: block;
            width: 100%;
            padding: 5px 10px;
            border: none;
            background: none;
            text-align: left;
            cursor: pointer;
            color: black;
        }

        .message-menu button:hover {
            background-color: #007bff;
            color: white;
        }

        .message-options {
            position: absolute;
            top: 0;
            right: 0;
            padding: 5px;
            cursor: pointer;
        }

        .delete-notification {
            display: none;
            margin-top: 10px;
            padding: 10px;
            background-color: #ffdddd;
            color: #d8000c;
            border: 1px solid #d8000c;
            border-radius: 4px;
        }

        .edited {
            font-size: 12px;
            color: grey;
        }

        input[type="text"] {
            width: calc(100% - 80px);
            padding: 8px;
            border: 1px solid #ccc;
            border-radius: 4px;
            margin-bottom: 10px;
        }

        #sendButton {
            width: 80px;
            padding: 8px;
            border: none;
            border-radius: 4px;
            background-color: #007bff;
            color: #fff;
            cursor: pointer;
        }

        #sendButton:hover {
            background-color: #0056b3;
        }

        #homeButton {
            display: block;
            text-align: center;
            margin-top: 20px;
            color: #007bff;
            text-decoration: none;
        }

        #homeButton:hover {
            text-decoration: underline;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Welcome to Chatroom: {{roomName}}</h1>

        <div id="messages"></div>
        <div class="delete-notification" id="deleteNotification">Message deleted</div>

        <input type="text" id="messageInput" placeholder="Type your message">
        <button id="sendButton">Send</button>

        <a href="/" id="homeButton">Home</a>
    </div>

    <script>
        const roomName = '{{roomName}}';
        let nickname = '';

        document.addEventListener('DOMContentLoaded', async () => {
            await fetchMessages();

            nickname = prompt('Please enter your nickname') || 'Anonymous';

            setInterval(fetchMessages, 3000);

            document.getElementById('sendButton').addEventListener('click', postMessage);
        });

        async function fetchMessages() {
            try {
                const response = await fetch(`/${roomName}/messages`);
                const messages = await response.json();
                const messagesDiv = document.getElementById('messages');
                messagesDiv.innerHTML = messages.map(msg => `
                    <div class="${msg.nickname === nickname ? 'message my-message' : 'message other-message'}" data-message-id="${msg._id}">
                        <strong>${msg.nickname}</strong>: ${msg.text} <em>(${new Date(msg.createdAt).toLocaleTimeString()})</em>
                        ${msg.edited ? '<div class="edited">edited</div>' : ''}
                        ${msg.nickname === nickname ? `
                        <div class="message-options" onclick="toggleMenu(this)">
                            &#x22EE;
                            <div class="message-menu">
                                <button class="edit" onclick="editMessage('${msg._id}')">Edit</button>
                                <button onclick="deleteMessage('${msg._id}')">Delete</button>
                            </div>
                        </div>` : ''}
                    </div>
                `).join('');
            } catch (error) {
                console.error('Error fetching messages:', error);
            }
        }

        async function postMessage() {
            const text = document.getElementById('messageInput').value.trim();
            if (text) {
                try {
                    await fetch(`/${roomName}/messages`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ nickname, text })
                    });
                    document.getElementById('messageInput').value = '';
                    fetchMessages();
                } catch (error) {
                    console.error('Error posting message:', error);
                }
            }
        }

        function toggleMenu(element) {
            const menu = element.querySelector('.message-menu');
            menu.style.display = menu.style.display === 'block' ? 'none' : 'block';
        }

        async function editMessage(messageId) {
            const newText = prompt('Edit your message:');
            if (newText) {
                try {
                    await fetch(`/messages/${messageId}`, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ text: newText })
                    });
                    fetchMessages();
                } catch (error) {
                    console.error('Error editing message:', error);
                }
            }
        }

        async function deleteMessage(messageId) {
            if (confirm('Are you sure you want to delete this message?')) {
                try {
                    await fetch(`/messages/${messageId}`, {
                        method: 'DELETE'
                    });
                    document.getElementById('deleteNotification').style.display = 'block';
                    setTimeout(() => {
                        document.getElementById('deleteNotification').style.display = 'none';
                    }, 5000);
                    fetchMessages();
                } catch (error) {
                    console.error('Error deleting message:', error);
                }
            }
        }
    </script>
</body>
</html>
